.avatar {
  box-sizing: content-box;
  /* 
    Essa é o estilo padrão, conforme especificado pela norma CSS. As propriedades width (largura) e height (altura) são medidas incluindo só o conteúdo, mas não o padding, border ou margin. Nota: Padding, border e margin serão fora da box. Exemplo.: Se .box {width: 350px} então se você aplicar uma propriedade {border: 10px solid black;} o resultado renderizado no navegador (browser) será .box {width: 370px;}
  
    Quando definimos box-sizing: content-box ele vai fazer com que o elemento mantenha seu valor padrão de altura e largura e tudo que é padding ou border ou margin somem na altura e na largura desse elemento e não o esprema como é na funcionalidade do box-sizing: border-box => https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model - https://developer.mozilla.org/pt-BR/docs/Web/CSS/box-sizing */
  width: 3rem;
  height: 3rem;
  border-radius: 8px;
  outline: 2px solid var(--green-500);
  border: 4px solid var(--gray-800);
  /* 
    Alternativa para margens negativas
    left: 50%;
    top: 0%;
    transform: translate(-50%, -125%);
    https://www.quirksmode.org/blog/archives/2020/02/negative_margin.html
     */
}

.profile {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.bottom {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.defaultPlacement {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.profile strong, .defaultPlacement strong {
  color: var(--gray-100);
  line-height: 1.6;
}

.profile span, .defaultPlacement span {
  font-size: 0.875rem;
  color: var(--gray-400);
  line-height: 1.6;
}
